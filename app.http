@url=http://localhost:3000

### Seed fake data (clears and seeds all tables)
POST {{url}}/faker

### Create a user
POST {{url}}/users
Content-Type: application/json

{
  "name": "Michael Kamau",
  "email": "mike.kamau@example.com",
  "password": "securePassword123",
  "role": "DRIVER"
}

### Get all users
GET {{url}}/users

### Get a user by id
GET {{url}}/users/dbf0f12e-6fc8-43d4-94e0-e5954e6ead06

### Update a user
PATCH {{url}}/users/:id
Content-Type: application/json

{
  "name": "Jane Updated",
  "email": "jane.updated@example.com"
}

### Delete a user
DELETE {{url}}/users/dbf0f12e-6fc8-43d4-94e0-e5954e6ead06

### Create a driver
POST {{url}}/drivers
Content-Type: application/json

{
  "userId": "dbf0f12e-6fc8-43d4-94e0-e5954e6ead06",
  "isAvailable": true,
  "baseLat": -1.2921,
  "baseLng": 36.8219
}

### Get all drivers
GET {{url}}/drivers

### Get a driver by id
GET {{url}}/drivers/:id

### Update a driver
PATCH {{url}}/drivers/:id
Content-Type: application/json

{
  "isAvailable": false,
  "baseLat": -1.3000,
  "baseLng": 36.8000
}

### Delete a driver
DELETE {{url}}/drivers/751c415f-8648-419e-a38a-c7891afcb922
### Create a vehicle
POST {{url}}/vehicles
Content-Type: application/json

{
  "model": "Toyota Prius",
  "plate": "KDA123A",
  "driverId": "REPLACE_WITH_DRIVER_ID"
}

### Get all vehicles
GET {{url}}/vehicles

### Get a vehicle by id
GET {{url}}/vehicles/:id

### Update a vehicle
PATCH {{url}}/vehicles/:id
Content-Type: application/json

{
  "model": "Toyota Corolla",
  "plate": "KDA999B"
}

### Delete a vehicle
DELETE {{url}}/vehicles/:id

### Create a booking
POST {{url}}/bookings
Content-Type: application/json

{
  "customerId": "8b911224-263c-4bfe-9044-d74e460b4639",
  "pickupAddress": "123 Main St",
  "dropoffAddress": "456 Elm St",
  "pickupLat": 42.355492,
  "pickupLng": -71.048611,
  "dropoffLat": -1.3000,
  "dropoffLng": 36.8000,
  "distanceKm":null ,
  "durationMins":null,
  "price":null,
  "stutus": "PENDING",
  "paymentStatus": "PENDING",
  "paymentMethod": "CASH"
}

### Get all bookings
GET {{url}}/bookings

### Get a booking by id
GET {{url}}/bookings/:id

### Update a booking locations
PATCH {{url}}/bookings/f78e839b-b665-4713-8384-d15f8d6dc3fa/locations
Content-Type: application/json

{
  "pickupLat": "49.41461",
  "pickupLng": "8.681495",
  "dropoffLat": "49.41943",
  "dropoffLng": "8.686507"
}


### Update a booking payment method
PATCH {{url}}/bookings/:id/payment-method
Content-Type: application/json

{
  "paymentMethod": "MPESA",
}


### Update a booking status
PATCH {{url}}/bookings/5ab9f7da-3e0e-471f-a212-b21c38b90160/status
Content-Type: application/json

{
  "status": "COMPLETED"
}

### Update a booking pay ride
PATCH {{url}}/bookings/:id/pay-ride
Content-Type: application/json

{
  "paymentStatus": "PAID",
}


### AUTH ENDPOINTS

### Sign in
POST {{url}}/auths/signin
Content-Type: application/json

{
  "email": "mike.kam@example.com",
  "password": "securePassword123"
}

### Sign out (replace :id with user id)
POST {{url}}/auths/signout/:id

### Refresh token (replace :id with user id, and use Bearer <refresh_token> in Authorization header)
POST {{url}}/auths/refresh-token?id=:id
Authorization: Bearer <refresh_token>

### ANALYTICS ENDPOINTS

### Get analytics for current user (requires Authorization: Bearer <access_token>)
GET {{url}}/analytics/me
Authorization: Bearer <access_token>

### Get admin analytics (requires Authorization: Bearer <access_token> for admin)
GET {{url}}/analytics/admin
Authorization: Bearer <access_token>

